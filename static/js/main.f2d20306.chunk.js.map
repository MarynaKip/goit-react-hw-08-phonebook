{"version":3,"sources":["redux/user/index.js","redux/user/operations.js","routes.js","components/UserMenu/index.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Content/index.jsx","App.js","redux/phoneBook/reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["createSlice","name","initialState","email","token","isLoggedOn","isLoading","isAuthorized","error","reducers","fetchLoginRequest","state","fetchLoginSuccess","action","payload","user","fetchLoginError","message","fetchLogoutRequest","fetchLogoutSuccess","fetchLogoutError","fetchUserRequest","fetchUserSuccess","fetchUserError","fetchUserCancel","actions","reducer","axios","defaults","baseURL","setToken","headers","common","login","dispatch","getState","post","then","data","catch","toast","logout","getCurrentUser","get","routes","path","label","component","lazy","exact","isProtected","isNotLoggedOn","useStyles","createUseStyles","menu","display","flexDirection","justifyContent","link","color","container","button","width","height","UserMenu","classes","useDispatch","useSelector","className","map","checkShowPage","to","onClick","PrivateRoute","props","PublicRoute","Content","fallback","Component","App","useEffect","contacts","items","id","number","filter","combineReducers","type","phoneBookPersistConfig","key","storage","whitelist","phoneBookReducer","persistReducer","phoneBook","tokenPersistConfig","userReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","rootReducer","devTools","process","persistor","persistStore","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","loading","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2d20306.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  name: \"\",\r\n  token: \"\",\r\n  isLoggedOn: false,\r\n  isLoading: true,\r\n  isAuthorized: true,\r\n  error: \"\",\r\n};\r\n\r\nconst { actions, reducer } = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    fetchLoginRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    fetchLoginSuccess: (state, action) => {\r\n      state.name = action.payload.user.name;\r\n      state.email = action.payload.user.email;\r\n      state.token = action.payload.token;\r\n      state.isLoggedOn = false;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLoginError: (state, action) => {\r\n      state.error = action.payload.message;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLogoutRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    fetchLogoutSuccess: (state, action) => {\r\n      state.token = \"\";\r\n      state.name = \"\";\r\n      state.email = \"\";\r\n      state.isLoggedOn = false;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLogoutError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    fetchUserRequest: (state) => {\r\n      state.isAuthorized = true;\r\n    },\r\n    fetchUserSuccess: (state, action) => {\r\n      state.name = action.payload.name;\r\n      state.email = action.payload.email;\r\n      state.isLoggedOn = true;\r\n      state.isAuthorized = false;\r\n    },\r\n    fetchUserError: (state) => {\r\n      state.isAuthorized = false;\r\n      state.isLoggedOn = false;\r\n      state.token = \"\";\r\n    },\r\n    fetchUserCancel: (state) => {\r\n      state.isAuthorized = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchLoginRequest,\r\n  fetchLoginSuccess,\r\n  fetchLoginError,\r\n  fetchLogoutRequest,\r\n  fetchLogoutSuccess,\r\n  fetchLogoutError,\r\n  fetchUserRequest,\r\n  fetchUserSuccess,\r\n  fetchUserError,\r\n  fetchUserCancel,\r\n} = actions;\r\nexport default reducer;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as actions from \"./index\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/users\";\r\n\r\nconst setToken = (token) => {\r\n  axios.defaults.headers.common[\"Authorization\"] = token;\r\n};\r\n\r\nexport const login = (payload) => (dispatch, getState) => {\r\n  dispatch(actions.fetchLoginRequest());\r\n\r\n  axios\r\n    .post(\"/login\", payload)\r\n    .then(({ data }) => {\r\n      setToken(data.token);\r\n      dispatch(actions.fetchLoginSuccess(data));\r\n    })\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      dispatch(actions.fetchLoginError(error.message));\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  dispatch(actions.fetchLogoutRequest());\r\n\r\n  axios\r\n    .post(\"/logout\")\r\n    .then(() => dispatch(actions.fetchLogoutSuccess()))\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      dispatch(actions.fetchLogoutError(error.message));\r\n    });\r\n};\r\n\r\nexport const getCurrentUser = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { token } = state.user;\r\n\r\n  if (!token) {\r\n    dispatch(actions.fetchUserCancel());\r\n    return;\r\n  }\r\n\r\n  dispatch(actions.fetchUserRequest());\r\n  setToken(token);\r\n\r\n  axios\r\n    .get(\"/current\")\r\n    .then(({ data }) => dispatch(actions.fetchUserSuccess(data)))\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      setToken(\"\");\r\n      dispatch(actions.fetchUserError(error.message));\r\n    });\r\n};\r\n","import { lazy } from \"react\";\r\n\r\nconst ContactsPage = lazy(() =>\r\n  import(\"./pages/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import(\"./pages/LoginPage\" /* webpackChunkName: \"login-page\" */)\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import(\"./pages/RegisterPage\" /* webpackChunkName: \"register-page\" */)\r\n);\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts Page\",\r\n    component: ContactsPage,\r\n    exact: true,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login Page\",\r\n    component: LoginPage,\r\n    isProtected: false,\r\n    isNotLoggedOn: true,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register Page\",\r\n    component: RegisterPage,\r\n    isProtected: false,\r\n    isNotLoggedOn: true,\r\n  },\r\n];\r\n\r\n// const Routes = {\r\n//   \"/contacts\": () => <ContactsPage />,\r\n//   \"/login\": () => <LoginPage />,\r\n//   \"/register\": () => <RegisterPage />,\r\n// };\r\n\r\n// export default Routes;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { routes } from \"../../routes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { A } from \"hookrouter\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport { logout } from \"../../redux/user/operations\";\r\n\r\nconst useStyles = createUseStyles({\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  link: {\r\n    color: \"green\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"150px\",\r\n    height: \"25px\",\r\n  },\r\n});\r\n\r\nconst checkShowPage = (isProtected, isLoggedOn, isNotLoggedOn) => {\r\n  const showProtected = !isProtected || (isProtected && isLoggedOn);\r\n  const showLoggedOn = !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn);\r\n\r\n  return showProtected && showLoggedOn;\r\n};\r\n\r\nconst UserMenu = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n\r\n  const handleLogOut = () => dispatch(logout());\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.menu}>\r\n        <p>User Menu</p>\r\n        {routes.map(({ path, exact, label, isProtected, isNotLoggedOn }) => {\r\n          const showInMenu = checkShowPage(\r\n            isProtected,\r\n            isLoggedOn,\r\n            isNotLoggedOn\r\n          );\r\n\r\n          return showInMenu ? (\r\n            // <A href={path} key={path} className={classes.link}>\r\n            //   {label}\r\n            // </A>\r\n            <NavLink\r\n              //activeClassName={classes.active}\r\n              key={path}\r\n              exact={exact}\r\n              to={path}\r\n            >\r\n              {label}\r\n            </NavLink>\r\n          ) : null;\r\n        })}\r\n      </div>\r\n      <button className={classes.button} onClick={handleLogOut}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n\r\n  return isLoggedOn ? <Route {...props} /> : <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst PublicRoute = (props) => {\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n  const { isNotLoggedOn } = props;\r\n\r\n  return !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn) ? (\r\n    <Route {...props} />\r\n  ) : null;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport PublicRoute from \"../PublicRoute\";\r\nimport { routes } from \"../../routes\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <Switch>\r\n          {routes.map(\r\n            ({\r\n              path,\r\n              exact,\r\n              isProtected,\r\n              component: Component,\r\n              isNotLoggedOn,\r\n            }) =>\r\n              isProtected ? (\r\n                <PrivateRoute\r\n                  key={path}\r\n                  path={path}\r\n                  exact={exact}\r\n                  component={Component}\r\n                />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={path}\r\n                  path={path}\r\n                  exact={exact}\r\n                  component={Component}\r\n                  isNotLoggedOn={isNotLoggedOn}\r\n                />\r\n              )\r\n          )}\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import \"./App.css\";\r\n// import { useRoutes } from \"hookrouter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import Routes from \"./routes\";\r\nimport UserMenu from \"./components/UserMenu\";\r\nimport Content from \"./components/Content\";\r\nimport { getCurrentUser } from \"./redux/user/operations\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // const routeResult = useRoutes(Routes);\r\n  const dispatch = useDispatch();\r\n  const isAuthorized = useSelector((state) => state.user.isAuthorized);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {isAuthorized ? (\r\n        <p>isLoading...</p>\r\n      ) : (\r\n        <div className=\"body\">\r\n          <UserMenu />\r\n          <Content />\r\n          {/* {routeResult}  */}\r\n          <ToastContainer />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: \"\",\r\n  contacts: {\r\n    items: [\r\n      {\r\n        id: null,\r\n        name: \"\",\r\n        number: null,\r\n      },\r\n    ],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst isLoading = (state = initialState.isLoading, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsRequest\":\r\n    case \"contacts/addContactRequest\":\r\n    case \"contacts/deleteContactRequest\":\r\n      return true;\r\n    case \"contacts/fetchContactsSuccess\":\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactSuccess\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactSuccess\":\r\n    case \"contacts/deleteContactError\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst error = (state = initialState.isLoading, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactError\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst items = (state = initialState.contacts.items, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"contacts/fetchContactsSuccess\":\r\n      return payload;\r\n    case \"contacts/addContactSuccess\":\r\n      return [...state, payload];\r\n\r\n    case \"contacts/deleteContactSuccess\":\r\n      return [...state.filter(({ id }) => payload !== id)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = initialState.contacts.filter, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    case \"contacts/ChangeFilter\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter, isLoading, error });\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport phoneBook from \"./phoneBook/reducer\";\r\nimport user from \"./user\";\r\n\r\nconst phoneBookPersistConfig = {\r\n  key: \"phoneBook\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst phoneBookReducer = persistReducer(phoneBookPersistConfig, phoneBook);\r\n\r\nconst tokenPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n};\r\n\r\nconst userReducer = persistReducer(tokenPersistConfig, user);\r\n\r\nexport default combineReducers({\r\n  phoneBook: phoneBookReducer,\r\n  user: userReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
{"version":3,"sources":["routes.js","components/UserMenu/index.jsx","App.js","redux/phoneBook/reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["routes","path","label","component","lazy","exact","showInMenu","isProtected","UserMenu","map","isNotLoggedOn","to","App","initialState","isLoading","error","contacts","items","id","name","number","filter","combineReducers","state","action","type","payload","persistConfig","key","storage","phoneBookReducer","persistReducer","phoneBook","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","rootReducer","devTools","process","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"qOAcaA,EAAS,CACpB,CACEC,KAAM,YACNC,MAAO,gBACPC,UAhBiBC,gBAAK,kBACxB,sDAgBEC,OAAO,EACPC,YAAY,EACZC,aAAa,GAEf,CACEN,KAAM,SACNC,MAAO,aACPC,UApBcC,gBAAK,kBACrB,gCAoBEE,YAAY,EACZC,aAAa,GAEf,CACEN,KAAM,YACNC,MAAO,gBACPC,UAvBiBC,gBAAK,kBACxB,gCAuBEE,YAAY,EACZC,aAAa,I,OCVFC,EAtBE,WACf,OACE,gCACE,0CACCR,EAAOS,KACN,YAAqE,IAAlER,EAAiE,EAAjEA,KAAMI,EAA2D,EAA3DA,MAAmBH,GAAwC,EAApDI,WAAoD,EAAxCJ,OAAwC,EAAjCK,YAAiC,EAApBG,cAC9C,OACE,cAAC,IAAD,CAGEL,MAAOA,EACPM,GAAIV,EAJN,SAMGC,GAJID,UCIJW,EAXH,WAIV,OACE,qCACE,cAAC,EAAD,IADF,Q,uDCREC,EAAe,CACnBC,WAAW,EACXC,MAAO,GACPC,SAAU,CACRC,MAAO,CACL,CACEC,GAAI,KACJC,KAAM,GACNC,OAAQ,OAGZC,OAAQ,KA8DGC,cAAgB,CAAEL,MAzBnB,WAAkD,IAAjDM,EAAgD,uDAAxCV,EAAaG,SAASC,MAAOO,EAAW,uCACrDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,IAAK,gCACH,OAAOC,EACT,IAAK,6BACH,MAAM,GAAN,mBAAWH,GAAX,CAAkBG,IAEpB,IAAK,gCACH,OAAO,YAAIH,EAAMF,QAAO,gBAAGH,EAAH,EAAGA,GAAH,OAAYQ,IAAYR,MAClD,QACE,OAAOK,IAc2BF,OAVzB,WAAmD,IAAlDE,EAAiD,uDAAzCV,EAAaG,SAASK,OAAQG,EAAW,uCACvDE,EAAYF,EAAZE,QACR,OAAQF,EAAOC,MACb,IAAK,wBACH,OAAOC,EACT,QACE,OAAOH,IAImCT,UA1D9B,WAA6C,IAA5CS,EAA2C,uDAAnCV,EAAaC,UAAWU,EAAW,uCACpDC,EAASD,EAATC,KAER,OAAQA,GACN,IAAK,gCACL,IAAK,6BACL,IAAK,gCACH,OAAO,EACT,IAAK,gCACL,IAAK,8BACL,IAAK,6BACL,IAAK,2BACL,IAAK,gCACL,IAAK,8BACH,OAAO,EACT,QACE,OAAOF,IA0C8CR,MAtC7C,WAA6C,IAA5CQ,EAA2C,uDAAnCV,EAAaC,UAAWU,EAAW,uCAChDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,IAAK,8BACL,IAAK,2BACL,IAAK,8BACH,OAAOC,EACT,QACE,OAAOH,MCxCPI,EAAgB,CACpBC,IAAK,YACLC,aAGIC,EAAmBC,YAAeJ,EAAeK,GAExCV,cAAgB,CAAEU,UAAWF,I,iBCDtCG,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGWC,EAAQC,YAAe,CAClCC,QAASC,EACTd,WAAYA,EACZe,UAAUC,ICZNC,EAAU,CAEdC,SAAUC,IAAUC,cACpBC,QAAS,IACTC,OAAQ,OAERC,WAAYC,IAAYC,OAGpBC,EAAO,kBACX,cAAC,IAAD,yBAAeC,SAAUC,KAAmBX,GAA5C,aACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAEE,cAAC,IAAD,UAEE,cAAC,EAAD,YAQRkB,iBAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.c5bee445.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nconst ContactsPage = lazy(() =>\r\n  import(\"./pages/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import(\"./pages/LoginPage\" /* webpackChunkName: \"login-page\" */)\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import(\"./pages/RegisterPage\" /* webpackChunkName: \"register-page\" */)\r\n);\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts Page\",\r\n    component: ContactsPage,\r\n    exact: true,\r\n    showInMenu: true,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login Page\",\r\n    component: LoginPage,\r\n    showInMenu: true,\r\n    isProtected: false,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register Page\",\r\n    component: RegisterPage,\r\n    showInMenu: true,\r\n    isProtected: false,\r\n  },\r\n];\r\n\r\n// const Routes = {\r\n//   \"/contacts\": () => <ContactsPage />,\r\n//   \"/login\": () => <LoginPage />,\r\n//   \"/register\": () => <RegisterPage />,\r\n// };\r\n\r\n// export default Routes;\r\n","import { routes } from \"../../routes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst UserMenu = () => {\r\n  return (\r\n    <div>\r\n      <p>User Menu</p>\r\n      {routes.map(\r\n        ({ path, exact, showInMenu, label, isProtected, isNotLoggedOn }) => {\r\n          return (\r\n            <NavLink\r\n              //activeClassName={classes.active}\r\n              key={path}\r\n              exact={exact}\r\n              to={path}\r\n            >\r\n              {label}\r\n            </NavLink>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import \"./App.css\";\r\n// import { useRoutes } from \"hookrouter\";\r\n// import Routes from \"./routes\";\r\nimport UserMenu from \"./components/UserMenu\";\r\n\r\nconst App = () => {\r\n  // const routeResult = useRoutes(Routes);\r\n  // return routeResult;\r\n\r\n  return (\r\n    <>\r\n      <UserMenu />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: \"\",\r\n  contacts: {\r\n    items: [\r\n      {\r\n        id: null,\r\n        name: \"\",\r\n        number: null,\r\n      },\r\n    ],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst isLoading = (state = initialState.isLoading, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsRequest\":\r\n    case \"contacts/addContactRequest\":\r\n    case \"contacts/deleteContactRequest\":\r\n      return true;\r\n    case \"contacts/fetchContactsSuccess\":\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactSuccess\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactSuccess\":\r\n    case \"contacts/deleteContactError\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst error = (state = initialState.isLoading, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactError\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst items = (state = initialState.contacts.items, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"contacts/fetchContactsSuccess\":\r\n      return payload;\r\n    case \"contacts/addContactSuccess\":\r\n      return [...state, payload];\r\n\r\n    case \"contacts/deleteContactSuccess\":\r\n      return [...state.filter(({ id }) => payload !== id)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = initialState.contacts.filter, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    case \"contacts/ChangeFilter\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter, isLoading, error });\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport phoneBook from \"./phoneBook/reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"phoneBook\",\r\n  storage,\r\n};\r\n\r\nconst phoneBookReducer = persistReducer(persistConfig, phoneBook);\r\n\r\nexport default combineReducers({ phoneBook: phoneBookReducer });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","// import React, { Suspense } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// import { store, persistor } from \"./redux/store\";\r\nimport { store } from \"./redux/store\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor}> */}\r\n      <Router>\r\n        {/* <Suspense fallback={<div>Loading... </div>}> */}\r\n        <App />\r\n        {/* </Suspense> */}\r\n      </Router>\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
{"version":3,"sources":["redux/phoneBook/selectors.js","redux/phoneBook/actions.js","redux/phoneBook/operations.js","components/Contacts/index.jsx","components/ContactItem/index.jsx","components/ContactList/index.jsx","pages/ContactsPage.jsx"],"names":["getContacts","state","phoneBook","items","getFilter","filter","getIsLoading","isLoading","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","actions","get","then","data","catch","error","number","post","id","delete","initialState","Contacts","alert","useAlert","useDispatch","useState","setState","useSelector","handleChange","e","prevState","target","value","onSubmit","preventDefault","newItem","uuidv4","Number","some","contact","show","operations","type","onChange","pattern","title","required","className","useStyles","createUseStyles","item","display","marginBottom","alignItems","justifyContent","fontSize","color","ContactItem","contactID","classes","find","getContact","onClick","list","listStyle","margin","padding","ContactList","visibleContacts","useEffect","map","ContactsPage","filterText"],"mappings":"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","file":"static/js/contacts-page.f1cbc690.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n// export const getContacts = (state) => state.phoneBook.contacts.items;\r\n// export const getFilter = (state) => state.phoneBook.contacts.filter;\r\nexport const getContacts = (state) => state.phoneBook.items;\r\nexport const getFilter = (state) => state.phoneBook.filter;\r\nexport const getIsLoading = (state) => state.phoneBook.isLoading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export const getContact = (contactID) => (state) =>\r\n//   state.phoneBook.contacts.items.find((item) => item.id === contactID);\r\nexport const getContact = (contactID) => (state) =>\r\n  state.phoneBook.items.find((item) => item.id === contactID);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(\"contacts/ChangeFilter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst getContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contacts = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contacts)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport default { getContacts, addContact, deleteContact };\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getContacts } from \"../../redux/phoneBook/selectors\";\r\nimport operations from \"../../redux/phoneBook/operations\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Contacts = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const { name, number } = state;\r\n\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleSaveItem = (item) => dispatch(operations.addContact(item));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      id: uuidv4(), // uuid\r\n      name,\r\n      number: Number(number),\r\n    };\r\n\r\n    if (contacts.some((contact) => contact.name === newItem.name)) {\r\n      alert.show(`Contact is already in contscts.`);\r\n      return;\r\n    }\r\n\r\n    handleSaveItem(newItem);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Number:</span>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          + Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport operations from \"../../redux/phoneBook/operations\";\r\nimport { getContact } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"20px\",\r\n    color: \"#b30047\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contactID }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const contact = useSelector(getContact(contactID)); //from redux\r\n  const { name, id, number } = contact;\r\n\r\n  const handleDeleteItem = () => dispatch(operations.deleteContact(id));\r\n\r\n  return (\r\n    <li key={id} className={classes.item}>\r\n      {name}\r\n      {number}\r\n      <button\r\n        className=\"button\"\r\n        id={id}\r\n        type=\"button\"\r\n        onClick={handleDeleteItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { getVisibleContacts } from \"../../redux/phoneBook/selectors\";\r\nimport operations from \"../../redux/phoneBook/operations\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const visibleContacts = useSelector(getVisibleContacts); //from redux\r\n\r\n  useEffect(\r\n    () => dispatch(operations.getContacts()),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {visibleContacts.map((contact) => (\r\n        <ContactItem contactID={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import \"../styles/HomePage.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Contacts from \"../components/Contacts\";\r\nimport ContactList from \"../components/ContactList\";\r\nimport actions from \"../redux/phoneBook/actions\";\r\nimport { getFilter, getIsLoading } from \"../redux/phoneBook/selectors\";\r\n\r\nconst ContactsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  const filter = useSelector(getFilter); //from redux\r\n\r\n  const handleFilter = (filterText) =>\r\n    dispatch(actions.changeFilter(filterText));\r\n\r\n  const handleChange = (e) => {\r\n    const filter = e.target.value;\r\n\r\n    handleFilter(filter);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"formBar\">\r\n        <span>Find:</span>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          value={filter}\r\n          name=\"filter\"\r\n          onChange={handleChange}\r\n        />\r\n        <Contacts />\r\n      </div>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}
{"version":3,"sources":["routes.js","components/UserMenu/index.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Content/index.jsx","App.js","redux/phoneBook/reducer.js","redux/rootReducer.js","redux/store.js","index.js","redux/user/index.js","redux/user/operations.js"],"names":["routes","path","label","component","lazy","exact","isProtected","isNotLoggedOn","useStyles","createUseStyles","menu","link","color","container","display","justifyContent","button","width","height","active","UserMenu","classes","dispatch","useDispatch","isLoggedOn","useSelector","state","user","React","useState","anchorEl","setAnchorEl","handleClose","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","map","checkShowPage","MenuItem","activeClassName","to","logout","variant","PrivateRoute","props","PublicRoute","Content","fallback","Component","App","isAuthorized","useEffect","getCurrentUser","initialState","isLoading","error","contacts","items","name","number","filter","combineReducers","action","type","payload","phoneBookPersistConfig","key","storage","whitelist","phoneBookReducer","persistReducer","phoneBook","tokenPersistConfig","userReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","rootReducer","devTools","process","persistor","persistStore","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","loading","render","document","getElementById","createSlice","email","token","reducers","fetchRegisterRequest","fetchRegisterSuccess","fetchRegisterError","message","fetchLoginRequest","fetchLoginSuccess","fetchLoginError","fetchLogoutRequest","fetchLogoutSuccess","fetchLogoutError","fetchUserRequest","fetchUserSuccess","fetchUserError","fetchUserCancel","actions","axios","defaults","baseURL","setToken","headers","common","register","getState","post","then","data","catch","toast","login","get"],"mappings":"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","file":"static/js/main.a6934c6d.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nconst ContactsPage = lazy(() =>\r\n  import(\"./pages/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import(\"./pages/LoginPage\" /* webpackChunkName: \"login-page\" */)\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import(\"./pages/RegisterPage\" /* webpackChunkName: \"register-page\" */)\r\n);\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts Page\",\r\n    component: ContactsPage,\r\n    exact: true,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login Page\",\r\n    component: LoginPage,\r\n    isProtected: false,\r\n    isNotLoggedOn: true,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register Page\",\r\n    component: RegisterPage,\r\n    isProtected: false,\r\n    isNotLoggedOn: true,\r\n  },\r\n];\r\n\r\n// const Routes = {\r\n//   \"/contacts\": () => <ContactsPage />,\r\n//   \"/login\": () => <LoginPage />,\r\n//   \"/register\": () => <RegisterPage />,\r\n// };\r\n\r\n// export default Routes;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { routes } from \"../../routes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { A } from \"hookrouter\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { logout } from \"../../redux/user/operations\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = createUseStyles({\r\n  menu: {\r\n    // display: \"flex\",\r\n    // flexDirection: \"column\",\r\n    // justifyContent: \"flex-start\",\r\n  },\r\n  link: {\r\n    color: \"green\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    width: \"150px\",\r\n    height: \"25px\",\r\n  },\r\n  active: {\r\n    color: \"rgb(59, 138, 255)\",\r\n  },\r\n});\r\n\r\nconst checkShowPage = (isProtected, isLoggedOn, isNotLoggedOn) => {\r\n  const showProtected = !isProtected || (isProtected && isLoggedOn);\r\n  const showLoggedOn = !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn);\r\n\r\n  return showProtected && showLoggedOn;\r\n};\r\n\r\nconst UserMenu = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogOut = () => dispatch(logout());\r\n  return (\r\n    <div className={classes.container}>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        Open Menu\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        className={classes.menu}\r\n      >\r\n        {routes.map(({ path, exact, label, isProtected, isNotLoggedOn }) => {\r\n          const showInMenu = checkShowPage(\r\n            isProtected,\r\n            isLoggedOn,\r\n            isNotLoggedOn\r\n          );\r\n\r\n          return showInMenu ? (\r\n            // <A href={path} key={path} className={classes.link}>\r\n            //   {label}\r\n            // </A>\r\n            <MenuItem onClick={handleClose}>\r\n              <NavLink\r\n                activeClassName={classes.active}\r\n                key={path}\r\n                exact={exact}\r\n                to={path}\r\n              >\r\n                {label}\r\n              </NavLink>\r\n            </MenuItem>\r\n          ) : null;\r\n        })}\r\n      </Menu>\r\n      <Button\r\n        onClick={handleLogOut}\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n\r\n  return isLoggedOn ? <Route {...props} /> : <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst PublicRoute = (props) => {\r\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\r\n  const { isNotLoggedOn } = props;\r\n\r\n  return !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn) ? (\r\n    <Route {...props} />\r\n  ) : null;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport PublicRoute from \"../PublicRoute\";\r\nimport { routes } from \"../../routes\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <Switch>\r\n          {routes.map(\r\n            ({\r\n              path,\r\n              exact,\r\n              isProtected,\r\n              component: Component,\r\n              isNotLoggedOn,\r\n            }) =>\r\n              isProtected ? (\r\n                <PrivateRoute\r\n                  key={path}\r\n                  path={path}\r\n                  exact={exact}\r\n                  component={Component}\r\n                />\r\n              ) : (\r\n                <PublicRoute\r\n                  key={path}\r\n                  path={path}\r\n                  exact={exact}\r\n                  component={Component}\r\n                  isNotLoggedOn={isNotLoggedOn}\r\n                />\r\n              )\r\n          )}\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import \"./App.css\";\r\n// import { useRoutes } from \"hookrouter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import Routes from \"./routes\";\r\nimport UserMenu from \"./components/UserMenu\";\r\nimport Content from \"./components/Content\";\r\nimport { getCurrentUser } from \"./redux/user/operations\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // const routeResult = useRoutes(Routes);\r\n  const dispatch = useDispatch();\r\n  const isAuthorized = useSelector((state) => state.user.isAuthorized);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {isAuthorized ? (\r\n        <p>isLoading...</p>\r\n      ) : (\r\n        <div className=\"body\">\r\n          <UserMenu />\r\n          <Content />\r\n          {/* {routeResult}  */}\r\n          <ToastContainer />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: \"\",\r\n  contacts: {\r\n    items: [\r\n      {\r\n        id: null,\r\n        name: \"\",\r\n        number: null,\r\n      },\r\n    ],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst isLoading = (state = initialState.isLoading, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsRequest\":\r\n    case \"contacts/addContactRequest\":\r\n    case \"contacts/deleteContactRequest\":\r\n      return true;\r\n    case \"contacts/fetchContactsSuccess\":\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactSuccess\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactSuccess\":\r\n    case \"contacts/deleteContactError\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst error = (state = initialState.isLoading, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"contacts/fetchContactsError\":\r\n    case \"contacts/addContactError\":\r\n    case \"contacts/deleteContactError\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst items = (state = initialState.contacts.items, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"contacts/fetchContactsSuccess\":\r\n      return payload;\r\n    case \"contacts/addContactSuccess\":\r\n      return [...state, payload];\r\n\r\n    case \"contacts/deleteContactSuccess\":\r\n      return [...state.filter(({ id }) => payload !== id)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = initialState.contacts.filter, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    case \"contacts/ChangeFilter\":\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter, isLoading, error });\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport phoneBook from \"./phoneBook/reducer\";\r\nimport user from \"./user\";\r\n\r\nconst phoneBookPersistConfig = {\r\n  key: \"phoneBook\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst phoneBookReducer = persistReducer(phoneBookPersistConfig, phoneBook);\r\n\r\nconst tokenPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n};\r\n\r\nconst userReducer = persistReducer(tokenPersistConfig, user);\r\n\r\nexport default combineReducers({\r\n  phoneBook: phoneBookReducer,\r\n  user: userReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  name: \"\",\r\n  token: \"\",\r\n  isLoggedOn: false,\r\n  isLoading: true,\r\n  isAuthorized: true,\r\n  error: \"\",\r\n};\r\n\r\nconst { actions, reducer } = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    fetchRegisterRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    fetchRegisterSuccess: (state, action) => {\r\n      state.name = action.payload.user.name;\r\n      state.email = action.payload.user.email;\r\n      state.token = action.payload.token;\r\n      state.isLoggedOn = false;\r\n      state.isLoading = false;\r\n    },\r\n    fetchRegisterError: (state, action) => {\r\n      state.error = action.payload.message;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLoginRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    fetchLoginSuccess: (state, action) => {\r\n      state.name = action.payload.user.name;\r\n      state.email = action.payload.user.email;\r\n      state.token = action.payload.token;\r\n      state.isLoggedOn = false;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLoginError: (state, action) => {\r\n      state.error = action.payload.message;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLogoutRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    fetchLogoutSuccess: (state, action) => {\r\n      state.token = \"\";\r\n      state.name = \"\";\r\n      state.email = \"\";\r\n      state.isLoggedOn = false;\r\n      state.isLoading = false;\r\n    },\r\n    fetchLogoutError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    fetchUserRequest: (state) => {\r\n      state.isAuthorized = true;\r\n    },\r\n    fetchUserSuccess: (state, action) => {\r\n      state.name = action.payload.name;\r\n      state.email = action.payload.email;\r\n      state.isLoggedOn = true;\r\n      state.isAuthorized = false;\r\n    },\r\n    fetchUserError: (state) => {\r\n      state.isAuthorized = false;\r\n      state.isLoggedOn = false;\r\n      state.token = \"\";\r\n    },\r\n    fetchUserCancel: (state) => {\r\n      state.isAuthorized = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchRegisterRequest,\r\n  fetchRegisterSuccess,\r\n  fetchRegisterError,\r\n  fetchLoginRequest,\r\n  fetchLoginSuccess,\r\n  fetchLoginError,\r\n  fetchLogoutRequest,\r\n  fetchLogoutSuccess,\r\n  fetchLogoutError,\r\n  fetchUserRequest,\r\n  fetchUserSuccess,\r\n  fetchUserError,\r\n  fetchUserCancel,\r\n} = actions;\r\nexport default reducer;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as actions from \"./index\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/users\";\r\n\r\nconst setToken = (token) => {\r\n  axios.defaults.headers.common[\"Authorization\"] = token;\r\n};\r\n\r\nexport const register = (payload) => (dispatch, getState) => {\r\n  dispatch(actions.fetchRegisterRequest());\r\n\r\n  axios\r\n    .post(\"/signup\", payload)\r\n    .then(({ data }) => {\r\n      setToken(data.token);\r\n      dispatch(actions.fetchRegisterSuccess(data));\r\n    })\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      dispatch(actions.fetchRegisterError(error.message));\r\n    });\r\n};\r\n\r\nexport const login = (payload) => (dispatch, getState) => {\r\n  dispatch(actions.fetchLoginRequest());\r\n\r\n  axios\r\n    .post(\"/login\", payload)\r\n    .then(({ data }) => {\r\n      setToken(data.token);\r\n      dispatch(actions.fetchLoginSuccess(data));\r\n    })\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      dispatch(actions.fetchLoginError(error.message));\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  dispatch(actions.fetchLogoutRequest());\r\n\r\n  axios\r\n    .post(\"/logout\")\r\n    .then(() => dispatch(actions.fetchLogoutSuccess()))\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      dispatch(actions.fetchLogoutError(error.message));\r\n    });\r\n};\r\n\r\nexport const getCurrentUser = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const { token } = state.user;\r\n\r\n  if (!token) {\r\n    dispatch(actions.fetchUserCancel());\r\n    return;\r\n  }\r\n\r\n  dispatch(actions.fetchUserRequest());\r\n  setToken(token);\r\n\r\n  axios\r\n    .get(\"/current\")\r\n    .then(({ data }) => dispatch(actions.fetchUserSuccess(data)))\r\n    .catch((error) => {\r\n      toast.error(error.message);\r\n      setToken(\"\");\r\n      dispatch(actions.fetchUserError(error.message));\r\n    });\r\n};\r\n"],"sourceRoot":""}
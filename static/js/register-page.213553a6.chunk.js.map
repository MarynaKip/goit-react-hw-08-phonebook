{"version":3,"sources":["pages/RegisterPage.jsx"],"names":["useStyles","createUseStyles","register","display","flexDirection","justifyContent","alignItems","form","label","button","height","RegisterPage","classes","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isLoading","useSelector","state","user","className","onSubmit","e","preventDefault","payload","type","value","onChange","target","variant","color"],"mappings":"kNAMMA,EAAYC,YAAgB,CAChCC,SAAU,CACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEdC,KAAM,CACJJ,QAAS,OACTC,cAAe,UAEjBI,MAAO,CACLL,QAAS,OACTE,eAAgB,iBAElBI,OAAQ,CACNC,OAAQ,UA6DGC,UAzDM,WACnB,IAAMC,EAAUZ,IACVa,EAAWC,cACjB,EAAwBC,mBAAS,eAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,0BAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,YAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,aAcpD,OACE,qBAAKI,UAAWd,EAAQV,SAAxB,SACGoB,EACC,2CAEA,uBAAMI,UAAWd,EAAQL,KAAMoB,SAXhB,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAU,CAAEd,OAAME,QAAOE,YAC/BP,EAASX,YAAS4B,KAQd,UACE,wBAAOJ,UAAWd,EAAQJ,MAA1B,UACE,0CACA,uBAAOuB,KAAK,OAAOC,MAAOhB,EAAMiB,SApBjB,SAACL,GAAD,OAAOX,EAAQW,EAAEM,OAAOF,aAsBzC,wBAAON,UAAWd,EAAQJ,MAA1B,UACE,2CACA,uBAAOuB,KAAK,QAAQC,MAAOd,EAAOe,SAtBlB,SAACL,GAAD,OAAOT,EAASS,EAAEM,OAAOF,aAwB3C,wBAAON,UAAWd,EAAQJ,MAA1B,UACE,8CACA,uBACEuB,KAAK,WACLC,MAAOZ,EACPa,SA3BiB,SAACL,GAAD,OAAOP,EAAYO,EAAEM,OAAOF,aA8BjD,cAAC,IAAD,CACED,KAAK,SACLL,UAAWd,EAAQH,OACnB0B,QAAQ,YACRC,MAAM,UAJR","file":"static/js/register-page.213553a6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../redux/user/operations\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = createUseStyles({\r\n  register: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    height: \"25px\",\r\n  },\r\n});\r\n\r\nconst RegisterPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"Test User 2\");\r\n  const [email, setEmail] = useState(\"test.user.two@mail.com\");\r\n  const [password, setPassword] = useState(\"12345678\");\r\n\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n\r\n  const handleChangeName = (e) => setName(e.target.value);\r\n\r\n  const handleChangeEmail = (e) => setEmail(e.target.value);\r\n\r\n  const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const payload = { name, email, password };\r\n    dispatch(register(payload));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.register}>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <label className={classes.label}>\r\n            <span>name: </span>\r\n            <input type=\"name\" value={name} onChange={handleChangeName} />\r\n          </label>\r\n          <label className={classes.label}>\r\n            <span>email: </span>\r\n            <input type=\"email\" value={email} onChange={handleChangeEmail} />\r\n          </label>\r\n          <label className={classes.label}>\r\n            <span>password: </span>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n            />\r\n          </label>\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}